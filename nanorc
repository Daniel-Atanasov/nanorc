bind ^c copy main
bind ^x cut main
bind ^v paste main
bind ^z undo main
bind ^y redo main
bind ^s savefile main
bind M-s writeout main
bind ^f whereis main
bind F3 findnext main
bind ^w replace main
bind ^/ comment main

unbind ^o main

set codebounds
set clipboard
set regexendbol

set tabsize 4
set tabstospaces
set linenumbers
set constantshow
set mouse
set noconvert
set regexp
set smarthome
set showcursor
set zap
set multibuffer
set tempfile
set autoindent
# set wordbounds

## Syntax highlighting for yacc/bison input files
syntax "yacc" ".y$"
comment "// "

icolor brightyellow "([[:alpha:]_][[:alnum:]_]*::)+[[:alpha:]_][[:alnum:]_]*"

icolor brightblue "\$[$[:digit:]]"

color brightred "\<[A-Z_][0-9A-Z_]+\>"
color green "\<(float|double|bool|char|wchar_t|int|short|long|sizeof|enum|void|static|const|struct|union|typedef|extern|(un)?signed|inline)\>"
color green "\<((s?size)|(char(8|16|32))|((u_?)?int(_fast|_least)?(8|16|32|64))|u?int(max|ptr))_t\>"
color green "\<(class|namespace|template|public|protected|private|typename|this|friend|virtual|using|mutable|volatile|register|explicit)\>"
color green "\<(for|if|while|do|else|case|default|switch)\>"
color green "\<(try|throw|catch|operator|new|delete)\>"
color green "\<((const|dynamic|reinterpret|static)_cast)\>"
color green "\<(alignas|alignof|asm|auto|compl|concept|constexpr|decltype|export|noexcept|nullptr|requires|static_assert|thread_local|typeid|override|final)\>"
# color green "\<(and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\>"
color brightmagenta "\<(goto|continue|break|return)\>"

color brightmagenta "'([^'\]|(\\[\"'abfnrtv\\]))'" "'\\(([0-3]?[0-7]{1,2}))'" "'\\x[0-9A-Fa-f]{1,2}'"

## Operator Color
color brightblack "[.:;,+*|=!\%]" "<" ">" "/" "-" "&"

## Bison directives
color red "%([{}%]|option|token|type|code|define|language|empty)"

## Preprocessor comments
color yellow "^[[:space:]]*#[[:space:]]*include[[:space:]]*<[^>]*>?"
color brightcyan "^[[:space:]]*#[[:space:]]*(define|include|(un|ifn?)def|endif|el(if|se)|if|warning|error)"

## Parenthetical Color
color magenta "[(){}]" "\[" "\]"

## Comments
icolor brightblack "//.*$"
icolor brightblack start="/\*" end="\*/"

## String
icolor yellow start="\"" end="[^\\](\\\\)*\""

## Visible space at line ends
icolor green,green "[[:space:]]+$"

## Syntax highlighting for lex/flex input files
syntax "lex" ".l$"
comment "// "

icolor brightyellow "([[:alpha:]_][[:alnum:]_]*::)+[[:alpha:]_][[:alnum:]_]*"

color brightred "\<[A-Z_][0-9A-Z_]+\>"
color green "\<(float|double|bool|char|wchar_t|int|short|long|sizeof|enum|void|static|const|struct|union|typedef|extern|(un)?signed|inline)\>"
color green "\<((s?size)|(char(8|16|32))|((u_?)?int(_fast|_least)?(8|16|32|64))|u?int(max|ptr))_t\>"
color green "\<(class|namespace|template|public|protected|private|typename|this|friend|virtual|using|mutable|volatile|register|explicit)\>"
color green "\<(for|if|while|do|else|case|default|switch)\>"
color green "\<(try|throw|catch|operator|new|delete)\>"
color green "\<((const|dynamic|reinterpret|static)_cast)\>"
color green "\<(alignas|alignof|asm|auto|compl|concept|constexpr|decltype|export|noexcept|nullptr|requires|static_assert|thread_local|typeid|override|final)\>"
# color green "\<(and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\>"
color brightmagenta "\<(goto|continue|break|return)\>"
color brightmagenta "'([^'\]|(\\[\"'abfnrtv\\]))'" "'\\(([0-3]?[0-7]{1,2}))'" "'\\x[0-9A-Fa-f]{1,2}'"

## Operator Color
color brightblack "[.:;,+*|=!\%]" "<" ">" "/" "-" "&"

## Flex directives
color red "%([{}%xs]|option|pointer|array|top)"

## Preprocessor comments
color yellow "^[[:space:]]*#[[:space:]]*include[[:space:]]*<[^>]*>?"
color brightcyan "^[[:space:]]*#[[:space:]]*(define|include|(un|ifn?)def|endif|el(if|se)|if|warning|error)"

## Parenthetical Color
color magenta "[(){}]" "\[" "\]"

icolor brightyellow "^\{[{}[:alpha:]_]*\}"
icolor brightcyan "^<[<*>[:alpha:]_]*>"

## Comments
icolor brightblack "//.*$"
icolor brightblack start="/\*" end="\*/"

## String
icolor yellow start="\"" end="[^\\](\\\\)*\""

## Visible space at line ends
icolor green,green "[[:space:]]+$"

include "~/.nano/apacheconf.nanorc"
include "~/.nano/arduino.nanorc"
include "~/.nano/asciidoc.nanorc"
include "~/.nano/asm.nanorc"
include "~/.nano/awk.nanorc"
include "~/.nano/c.nanorc"
include "~/.nano/clojure.nanorc"
include "~/.nano/cmake.nanorc"
include "~/.nano/coffeescript.nanorc"
include "~/.nano/colortest.nanorc"
include "~/.nano/conf.nanorc"
include "~/.nano/csharp.nanorc"
include "~/.nano/css.nanorc"
include "~/.nano/cython.nanorc"
include "~/.nano/dot.nanorc"
include "~/.nano/dotenv.nanorc"
include "~/.nano/email.nanorc"
include "~/.nano/Dockerfile.nanorc"
include "~/.nano/etc-hosts.nanorc"
include "~/.nano/fish.nanorc"
include "~/.nano/fortran.nanorc"
include "~/.nano/gentoo.nanorc"
include "~/.nano/git.nanorc"
include "~/.nano/gitcommit.nanorc"
include "~/.nano/glsl.nanorc"
include "~/.nano/go.nanorc"
include "~/.nano/gradle.nanorc"
include "~/.nano/groff.nanorc"
include "~/.nano/haml.nanorc"
include "~/.nano/haskell.nanorc"
include "~/.nano/html.nanorc"
include "~/.nano/html.j2.nanorc"
include "~/.nano/ical.nanorc"
include "~/.nano/ini.nanorc"
include "~/.nano/inputrc.nanorc"
include "~/.nano/jade.nanorc"
include "~/.nano/java.nanorc"
include "~/.nano/javascript.nanorc"
include "~/.nano/js.nanorc"
include "~/.nano/json.nanorc"
include "~/.nano/keymap.nanorc"
include "~/.nano/kickstart.nanorc"
include "~/.nano/kotlin.nanorc"
include "~/.nano/ledger.nanorc"
include "~/.nano/lisp.nanorc"
include "~/.nano/lua.nanorc"
include "~/.nano/makefile.nanorc"
include "~/.nano/man.nanorc"
include "~/.nano/markdown.nanorc"
include "~/.nano/mpdconf.nanorc"
include "~/.nano/mutt.nanorc"
include "~/.nano/nanorc.nanorc"
include "~/.nano/nginx.nanorc"
include "~/.nano/nmap.nanorc"
include "~/.nano/ocaml.nanorc"
include "~/.nano/patch.nanorc"
include "~/.nano/peg.nanorc"
include "~/.nano/perl.nanorc"
include "~/.nano/perl6.nanorc"
include "~/.nano/php.nanorc"
include "~/.nano/pkg-config.nanorc"
include "~/.nano/pkgbuild.nanorc"
include "~/.nano/po.nanorc"
include "~/.nano/pov.nanorc"
include "~/.nano/privoxy.nanorc"
include "~/.nano/puppet.nanorc"
include "~/.nano/pug.nanorc"
include "~/.nano/python.nanorc"
include "~/.nano/reST.nanorc"
include "~/.nano/rpmspec.nanorc"
include "~/.nano/ruby.nanorc"
include "~/.nano/rust.nanorc"
include "~/.nano/scala.nanorc"
include "~/.nano/sed.nanorc"
include "~/.nano/sh.nanorc"
include "~/.nano/sls.nanorc"
include "~/.nano/sql.nanorc"
include "~/.nano/svn.nanorc"
include "~/.nano/swift.nanorc"
include "~/.nano/systemd.nanorc"
include "~/.nano/tcl.nanorc"
include "~/.nano/tex.nanorc"
include "~/.nano/vala.nanorc"
include "~/.nano/verilog.nanorc"
include "~/.nano/vi.nanorc"
include "~/.nano/xml.nanorc"
include "~/.nano/xresources.nanorc"
include "~/.nano/yaml.nanorc"
include "~/.nano/yum.nanorc"
include "~/.nano/zsh.nanorc"
